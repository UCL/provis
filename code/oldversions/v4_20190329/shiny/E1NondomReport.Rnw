% TODO
%    1) if road, settlement or rail coordinates outside region then quit
\documentclass{article}
\usepackage{geometry}
\usepackage{amssymb}
\usepackage{amsfonts}
\usepackage{amsmath}
\usepackage{amssymb}
\usepackage{graphicx}
\usepackage{epstopdf}
\usepackage{dcolumn}
\usepackage{subfig}
\usepackage{float}
\usepackage{multirow}

<<LIB,cache=FALSE,echo=FALSE,results='hide',message=FALSE,warning=FALSE>>=
library(knitr)
opts_chunk$set(concordance=TRUE, 
               echo=FALSE,
               tidy=FALSE,
               autodep=TRUE,
               cache=FALSE, 
               message=FALSE, 
               warning=FALSE,
               cache.path='cache/settlement',
               size='scriptsize',
               results='hide',
               comment=NA, 
               fig.width=4,
               fig.height=4, 
               out.width='.5\\textwidth',
               fig.show='hold')


@

<<MODEL,cache=TRUE,echo=FALSE>>=
nregs    <- 11
regnames <- data.frame(region_id=seq(1:nregs), 
                       region_str=c("CaMKOx", "CornwallDevon", 
                                    "EastMid", "EastEng", 
                                    "London", "NE", "NW", 
                                    "SE", "SW", "WestMid", 
                                    "YorkshireHumber"),
                       name=c("Cambridge, Milton Keynes, and Oxford",
                              "Cornwall and Devon",
                              "East Midlands",
                              "East of England",
                              "London","North East",
                              "North West","South East",
                              "South West","West Midlands",
                              "Yorkshire and the Humber"))
region_map_index    <- c(3,9,4,6,7,1,2,8,9,5,3)
infrastructure_type <- "settlement"   # c("rail","road","settlement")
datastub<-"nondom"
                
# parameters of new settlement
#load(file=paste0(CodeDir,"/shiny/www/parms.RData"))
# Assumes parms.RData is in current working directory
aa1<-getwd()
cat(file=stderr(),"getwd() = ",aa1,"\n")
load(file="parms.RData")
cat(file=stderr(),"project_id  = ",parms$project_id,"\n")
cat(file=stderr(),"nhouses     = ",parms$nhouses,"\n")
cat(file=stderr(),"nbusinesses = ",parms$nbusinesses,"\n")
cat(file=stderr(),"popdensity = ",parms$popdensity,"\n")
cat(file=stderr(),"la_model   = ",parms$la_model,"\n")
cat(file=stderr(),"region_id  = ",parms$region_id,"\n")

project_id   <- parms$project_id
nbusinesses  <- parms$nbusinesses
nhouses      <- parms$nhouses
popdensity   <- parms$popdensity
model_laname <- parms$la_model
mapfile      <- parms$mapfile
#mapfile      <-paste0(CodeDir,"/shiny/kml/region2settlement1.kml")
region_id    <- parms$region_id
dirs         <- B2SetPath(RootDir,CodeDir,region_id,datastub=datastub)
travelmodelbasis <- parms$travelmodelbasis

price_per_acre <- c(7727,9888,18038) # from 2017 RICS
commercial_yield <- 0.045 # from Saviles XXX
sqm_per_acre <- 4046.86   # square meters per acre
price_per_sqm <- price_per_acre/sqm_per_acre
m2flag        <- 5  # 0 = m2ols0, 1 = m2ols1, 5 = m2ols5
depvar        <- "logvalue"  # one of c("logvalue","value","boxcoxvalue")
avgtimeflag   <- 1  # 1 = average time. 0 = (drive_time,trans_time)
# END OF PARAMETERS

region_str      <- as.character(regnames$region_str[region_id]) 
DestinationFile <- paste0(dirs$datadir,"/destinations",region_id,".csv")

dest      <- read.csv(DestinationFile)  
dest      <- dest[dest$shortlist,]
ndest     <- nrow(dest)
dest_name <- strsplit(as.character(dest$name),",")
dest_name <- matrix(unlist(dest_name),2,nrow(dest))[1,]

# load region shape file
wgs.84          <- '+proj=longlat +datum=WGS84 +no_defs +ellps=WGS84 +towgs84=0,0,0'
ukgrid          <- "+init=epsg:27700"
regionshapefile <- "Regions_December_2015_Generalised_Clipped_Boundaries_in_England"
regions         <- readOGR(dirs$mapdir,layer=regionshapefile)
regions         <- spTransform(regions,CRS(wgs.84))

# 1) Create counterfactual settlement
# 2) Compute new travel times
# 3) Compute new prices
load(paste0(dirs$datadir,"/m2data2.RData"))

# set location_value to one of c("logvalue","value","boxcoxvalue")
m2data$location_value <- m2data[,grep(paste0("\\<",depvar),colnames(m2data))]

newdata<-F1CreateNondom(nbusinesses,popdensity,mapfile,model_laname,m2data)
cat(file=stderr(),"F1CreateNondom complete.","\n")
newdata<-F2CreateNondom(region_id,dirs,m2data_new = newdata,depvar=depvar,
                        travelmodelbasis = travelmodelbasis) 

cat(file=stderr(),"F2CreateNondom complete.","\n")

out0    <- A6PredictPrice(newdata$m1data_old,newdata$m2data_new,dirs$outdir,m2flag=m2flag,depvar=depvar)  
cat(file=stderr(),"Predict out0 complete.","\n")
out1    <- A6PredictPrice(newdata$m1data_new,newdata$m2data_new,dirs$outdir,m2flag=m2flag,depvar=depvar) 
cat(file=stderr(),"Predict out1 complete.","\n")
  
# 1) convex hull of settlement
properties<-SpatialPoints(newdata$m2data_new[,c("longitude","latitude")],CRS(wgs.84))
properties<-SpatialPointsDataFrame(properties,data=newdata$m2data_new)
properties_convexhull<-gConvexHull(properties)
  
# Create spatial data frames of destinations for plotting
dest_spatial<-SpatialPoints(dest[,c("longitude","latitude")],CRS(wgs.84))
dest_spatial<-SpatialPointsDataFrame(dest_spatial,data=dest)
dest_spatial<-spTransform(dest_spatial,CRS(ukgrid))
dest_envelope<-gBuffer(gEnvelope(dest_spatial),width=0.1)
c1<-gUnion(properties_convexhull,spTransform(dest_envelope,CRS(wgs.84)))
if (region_id!=1) {
  subregion<-gIntersection(regions[region_map_index[region_id],],c1)
} else if (region_id==1) {
  subregion<-gIntersection(regions[region_map_index[c(3,4,8)],],c1)
}
subregion1<-subregion@polygons[[1]]@Polygons[[1]]
  
# 2) centroid of settlement (for descriptive stats)
project_centroid<-gCentroid(properties) 
t1<-knn(newdata$m1data_old[,c("longitude","latitude")],coordinates(project_centroid),
        newdata$m1data_old$postal_town,k=1) 
project_location<-as.character(t1)
project_centroid<-coordinates(project_centroid)
cat(file=stderr(),"project_location = ",project_location,"\n")

# Land area of settlement
m_sq  <- gArea(spTransform(properties_convexhull,ukgrid))
km_sq <- m_sq/1e6

# Load results from models 1 and 2 
if (m2flag==0) {
  load(paste0(dirs$outdir,"/m2",depvar,"0.RData"))
  m2<-m2ols0
} else if (m2flag==1) {
  load(paste0(dirs$outdir,"/m2",depvar,"1.RData"))
  m2<-m2ols1
} else if (m2flag==5) {
  load(paste0(dirs$outdir,"/m2",depvar,"5.RData"))
  m2<-m2ols5
}

#    names(out0)<-c("new","model1_size","model1_location_old","model1_location_new",
#                   "model1_all","model2_new")
if (depvar=="logvalue") {
  newprice<-exp(out1$new)/commercial_yield
  oldprice<-exp(out0$new)/commercial_yield
} else if (depvar=="value") {
  newprice<-out1$new/commercial_yield
  oldprice<-out0$new/commercial_yield
} else if (depvar=="boxcoxvalue") {
  load(paste0(dirs$outdir,"/m1boxcox0.RData"))
  lambda <- m1boxcox0$lambda
  newprice <- ((1+lambda*out1$new)^(1/lambda))/commercial_yield
  oldprice <- ((1+lambda*out0$new)^(1/lambda))/commercial_yield
}
farmprice_lo  <- rep(m_sq*price_per_sqm[1]/nbusinesses,length.out=length(newprice))
farmprice_med <- rep(m_sq*price_per_sqm[2]/nbusinesses,length.out=length(newprice))
farmprice_hi  <- rep(m_sq*price_per_sqm[3]/nbusinesses,length.out=length(newprice))
  
deltaprice<-newprice-oldprice
deltaprice_lo<-newprice-farmprice_lo
deltaprice_med<-newprice-farmprice_med
deltaprice_hi<-newprice-farmprice_hi
  
@

\title{Region:   \Sexpr{regnames$name[region_id]} \\
       Project ID:   project \Sexpr{project_id} \\
       Impact on commercial properties of new \Sexpr{infrastructure_type} near \Sexpr{project_location} }
\author{Property Value Uplift Calculator \\
        IFS and CeMMAP}
\date{}           


\begin{document}
%\SweaveOpts{concordance=TRUE}
\maketitle

\section{Introduction}

\section{Type of project}
The project is a new \textbf{\Sexpr{infrastructure_type}} in the 
\textbf{\Sexpr{regnames$name[region_id]}} region. Figure \ref{fig:MAP} displays a map of the new \Sexpr{infrastructure_type}. 

<<MAP,fig.cap="Map of new settlement",fig.pos="H">>=
  plot(subregion,main="Location of new settlement",lty=3,col="green")
  plot(properties_convexhull,add=TRUE,col="red")
  text(project_centroid,pos=2,label="NEW",col="red",cex=1)
  text(dest[,c("longitude","latitude")],pos=1,label=dest[,"shortname"],cex=.8)
  if (nrow(properties)>500) {
    i1<-sample(c(1:nrow(properties)),size=500)
  } else {
    i1<-c(1:nrow(properties))  
  }
  plot(properties[i1,],main="New settlement",pch=0,col="red")
  points(dest[,c("longitude","latitude")],pch=2,lwd=1)
  text(dest[,c("longitude","latitude")],pos=1,label=dest[,"shortname"],cex=.5)
@

The new settlement consists of \Sexpr{format(nhouses,big.mark=",")} houses 
and \Sexpr{format(nbusinesses,big.mark=",")} near \Sexpr{project_location}. 
Tables \ref{table:settlement} and \ref{table:settlement sumstats} 
present some summary statistics for the new \Sexpr{infrastructure_type}.

\begin{table}[H]
\caption{Settlement details}\label{table:settlement}
\begin{center}
\begin{tabular}{ll}
\hline \hline
Variable & Value \\
\hline
Location & Near \Sexpr{project_location} \\
Centroid (longitude,latitude) & (\Sexpr{project_centroid}) \\
Area (square km.) & \Sexpr{round(km_sq,2)}  \\
Number of dwellings & \Sexpr{format(nhouses,big.mark=",")} \\
Number of businesses & \Sexpr{format(nbusinesses,big.mark=",")} \\
Population density & \Sexpr{round(mean(properties$popdensityOA),2)} \\
\hline
\end{tabular}
\end{center}
\end{table}

<<DATA_SUMSTATS,results='asis',fig.pos="H">>=
title<-paste0("Summary statistics for new settlement near ",project_location,"\\label{table:settlement sumstats}") 
if (m2flag==1) {
  ispline<-grep("spline_",m2$varlist)
  varlist<-m2$varlist[-ispline]
  idrive<-grep("\\<drive_",colnames(newdata$m2data_new))
  itrans<-grep("\\<trans_",colnames(newdata$m2data_new))
  iavgtime<-grep("\\<avgtime_",colnames(newdata$m2data_new))
  varlist<-c(varlist,colnames(newdata$m2data_new)[c(idrive,itrans,iavgtime)])
}  else {
  varlist<-m2$varlist
}
stargazer(newdata$m2data_new[,varlist],title=title,
          align=TRUE,digits=2)
@

The summary statistics for the new settlement are based on an ``average" local authority in the region. Currently, the characteristics are chosen so that the average characteristics of the new settlement are similar to \Sexpr{model_laname} local authority.

To predict new commercial property values, this report assumes:
\begin{itemize}
\item Rateable values are determined by 1) property size, 2) commercial use and 3) location. Details of the data used to estimate
the model are presented in Section \ref{section:data}. Model details are presented in Section \ref{section:model}.
\item Commercial values equal rateable values divided by an annual yield of
\Sexpr{commercial_yield}.\footnote{This average yield commercial property in 
the UK in XXX from XXX}
\item Location values are primarily determined by travel time to various locations, land use in the surrounding area, local demographics, distance to the coast and various local amenities and disamenities including greenbelt status and road noise.  
\item Travel times to \Sexpr{nrow(dest)} locations are the dominant factors for property values in this region. These locations are: (\textbf{ \Sexpr{dest_name}} ).
\item All travel times are estimated using Google Maps.
\item The model does not account for changes in congestion or any other changes in travel time induced by the new \Sexpr{infrastructure_type}.
\item The model provides short-run predictions only. In the long run, commuting patterns, job locations and the importance of destinations will likely change. The model does not account for these long run changes.
\item The model provides the best approximation to the short run impact of the new \Sexpr{infrastructure_type}.
\end{itemize}

% 5) impact of new investment
\section{Impact of the new \Sexpr{infrastructure_type}}
The new settlement increases the number of 
business establishments by \Sexpr{nbusinesses}.

\pagebreak
\section{Impact on prices}
<<PRICE_SUMSTATS,results='asis',fig.pos="H">>=
title<-"Property prices (units = year 2017 GBP )"
stargazer(data.frame(newprice,deltaprice_lo,deltaprice_med,deltaprice_hi),
          title=title,align=TRUE, out.header=TRUE,digits=1,font.size="small",
          flip=FALSE,summary.stat=c("mean","min","p25","median","p75","max"),
          notes="This table shows the distribution of predicted commercial 
property values for the new properties.")
@

The variables "deltaprice\_lo", "deltaprice\_med", and "deltaprice\_hi" measure the gain in property value
assuming all land in the settlement previously was farmland and 
was purchased at prices per acre of \pounds \Sexpr{as.character(price_per_acre[1])}, \pounds \Sexpr{as.character(price_per_acre[2])}, and \pounds \Sexpr{as.character(price_per_acre[3])} respectively.

\section{Data}\label{section:data}

The data for this project are derived from several sources. Full details are available from IFS upon request. 

The main data sources are as follows:
\begin{itemize}
\item Valuation Office Agency (VOA) 2017 Compiled Rating List database of rateable values for April 2015.
\item Infrastructure, land use and amenities data from OS, Google, DCLG, DOT, DEFRA, Census (roads, bridges, rail networks and stations, airports, rivers, parks, buildings, job locations, travel times).
\item Publicly available planning data at most disaggregate level available from DCLG and local authorities.
\end{itemize}

Some of the variables included in the model are as follows:
\begin{tiny}

\begin{table}[h]
\caption{Baseline database}
\begin{center}
\begin{tabular}{|llll|}
\hline
Type		&Variable 				& Description 					& Source \\ \hline
Outcome	&rateablevalue 		& April 2015 rateable value & \multirow{5}{3.5cm}{VOA} \\
Building 	&usecode			  & type of commercial use		& \\ 
Location	&postcode 				& post code						& \\ \hline

Location	&eastings 				& east coordinates				& \multirow{2}{3.5cm}{AddressBase Premium}\\
Location	&northings 				& north coordinates 			& \\ \hline

Building	&total\_floor\_area		& Floor space					& \multirow{5}{3.5cm}{DCLG EPC data}\\
Planning	&greenbelt				& 1 if in greenbelt				& DCLG green belt stats \\
Amenity		&floodzone3 			& 1 if in floodzone3			& EA planning flood zone data\\ 
Planning	&localplanrate 			& Planned housing increase (\%)	& DCLG collated local plans \\
Planning 	&builtuparea\_pct 		& Built-up (BU) land (LA\%) 	& \multirow{5}{3.5cm}{DCLG land constraints}\\
Planning 	&busyland\_pct 			& BU and protected land (LA\%) 	& \\
Planning 	&busylandfz3\_pct 		& BU + prot. + fz3 (LA\%)		& \\
Planning 	&restrictedland\_pct 	& Protected land (LA\%) 		& \\
Planning 	&restrictedlandfz3\_pct	& Prot + fz3 (LA\%)				& \\
Amenity 	&roadnoise 				& 1 = traffic louder than 55dB	& \\
Travel	 	&traveltimes 			& To employment centres			& Google maps/estimates\\
Employment & jobs & Number of jobs in OA & Census \\
\hline
\end{tabular}
\end{center}
\end{table}
\end{tiny}

\pagebreak
\section{Model}\label{section:model}
Section \ref{section:model 1} shows summary statistics for the model that predicts
log rateable values as a function of the commercial use code and location.

Section \ref{section:model 2} shows how log rateable values depend on travel times to important cities and destinations in the region as well as on other local amenities and disamenities.

\subsection{Model 1}\label{section:model 1}
<<MODEL1_SUMSTATS,results='asis'>>=
if (depvar=="logvalue") {
  load(paste0(dirs$outdir,"/m1log0.RData"))
  m1<-m1log0
} else if (depvar=="value") {
  load(paste0(dirs$outdir,"/m1linear0.RData"))
  m1<-m1linear0
} else if (depvar=="boxcoxvalue") {
  load(paste0(dirs$outdir,"/m1boxcox0.RData"))
  m1<-m1boxcox0
}
iomit<- (grepl("Lat",names(m1$coefficients)) | 
         grepl("Lon",names(m1$coefficients)))
keeplist<-c(1:length(names(m1$coefficients)))
keeplist<-keeplist[!iomit]

stargazer(m1,keep=keeplist,no.space=TRUE,single.row=TRUE,
          title="Summary statistics for log rateable value model")
@
\pagebreak

\subsection{Model 2}\label{section:model 2}
<<MODEL2_SUMSTATS,results='asis',fig.pos="H">>=

stargazer(m2,no.space=TRUE,single.row=TRUE,
          font.size="small",omit="spline",
          title="Dependence of log rateable value on locational amenities ")
@
\pagebreak
\section{Figures}

% Figure 3: Densities and heatmaps of prices
<<PRICE_PLOTS_3,fig.cap="Impact of project on prices">>=
  title="Rateable value before investment"
  plot(density(oldprice,na.rm=TRUE),main=title,xlab="rateable value (2017 GBP) ")
@
% Figure 4: Densities and heatmaps of prices
<<PRICE_PLOTS_4,fig.cap="Impact of project on prices">>=
  title="Rateable value before investment"
  iz<-(!is.na(oldprice) & !is.infinite(oldprice))
  x<-newdata$m2data_new$longitude[iz]
  y<-newdata$m2data_new$latitude[iz]
  xres <- (max(x)-min(x))/20
  yres <- (max(y)-min(y))/20
  zlabel<-"old value (2017 GBP) "
  map1 <- interp(x=x,
                 y=y,
                 z=oldprice[iz],
                 yo=seq(min(y),max(y),by=xres),
                 xo=seq(min(x),max(x),by=yres),
                 duplicate="mean")
  places<-dest[,c("shortname","longitude","latitude")]
 filled.contour(map1, color.palette=terrain.colors,
                plot.title={
                          title(xlab="Longitude",cex.lab=1)
                          mtext("Latitude",2,cex=1,line=3,las=0)
                          mtext(zlabel,4,cex=1,line=0.8,las=0)},
                plot.axes={points(places[,2:3], pch=24); 
                              text(places[,2:3], pos=1, labels=places[,1], cex=0.7)})

@

% Figure 5: Densities and heatmaps of prices
<<PRICE_PLOTS_5,fig.cap="Impact of project on prices">>=
  title="Rateable value post investment"
  plot(density(newprice,na.rm=TRUE),main=title,xlab="rateable value (2017 GBP) ")
  iz<- (!is.na(newprice) & !is.infinite(newprice))
  x<-newdata$m2data_new$longitude[iz]
  y<-newdata$m2data_new$latitude[iz]
  xres <- (max(x)-min(x))/20
  yres <- (max(y)-min(y))/20
  zlabel<-"new rateable value (2017 GBP) "
  map1 <- interp(x=x,
                 y=y,
                 z=newprice[iz],
                 yo=seq(min(y),max(y),by=xres),
                 xo=seq(min(x),max(x),by=yres),
                 duplicate="mean")
  places<-dest[,c("shortname","longitude","latitude")]
 filled.contour(map1, color.palette=terrain.colors,
                plot.title={
                          title(xlab="Longitude",cex.lab=1)
                          mtext("Latitude",2,cex=1,line=3,las=0)
                          mtext(zlabel,4,cex=1,line=0.8,las=0)},
                plot.axes={points(places[,2:3], pch=24); 
                              text(places[,2:3], pos=1, labels=places[,1], cex=0.7)})

@

% Figure 6: Densities and heatmaps of prices
<<PRICE_PLOTS_6,fig.cap="Impact of project on prices">>=
  title="Change in value: (new minus old rateable value)"
  plot(density(deltaprice,na.rm=TRUE),main=title,xlab="rateable value (2017 GBP) ")
  iz<- (!is.na(deltaprice) & !is.infinite(deltaprice))
  x<-newdata$m2data_new$longitude[iz]
  y<-newdata$m2data_new$latitude[iz]
  xres <- (max(x)-min(x))/20
  yres <- (max(y)-min(y))/20
  zlabel<-"change in rateable value (2017 GBP) "
  map1 <- interp(x=x,
                 y=y,
                 z=deltaprice[iz],
                 yo=seq(min(y),max(y),by=xres),
                 xo=seq(min(x),max(x),by=yres),
                 duplicate="mean")
  places<-dest[,c("shortname","longitude","latitude")]
 filled.contour(map1, color.palette=terrain.colors,
                plot.title={
                          title(xlab="Longitude",cex.lab=1)
                          mtext("Latitude",2,cex=1,line=3,las=0)
                          mtext(zlabel,4,cex=1,line=0.8,las=0)},
                plot.axes={points(places[,2:3], pch=24); 
                              text(places[,2:3], pos=1, labels=places[,1], cex=0.7)})
@



\end{document}
